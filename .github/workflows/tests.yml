name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # assuming the default ubuntu latest already has python3 and pip installed

    - name: Install Docker and Docker Compose
      run: |
        # Update package list
        sudo apt-get update
        
        # Install prerequisites
        sudo apt-get install ca-certificates curl
        
        # Add Docker's official GPG key
        sudo install -m 0755 -d /etc/apt/keyrings
        sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
        sudo chmod a+r /etc/apt/keyrings/docker.asc
        
        # Add the repository to Apt sources:
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update

        # Install Docker Engine and Docker Compose
        sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
        
        # Verify installation
        docker --version
        docker compose version

    - name: Set up Python virtual environment
      run: |
        python3 -m venv venv
        source venv/bin/activate
        pip install --upgrade pip

    - name: Install test dependencies
      run: |
        source venv/bin/activate
        pip install -r requirements-test.txt

    - name: Build Docker images
      run: |
        sudo docker compose build

    - name: Run tests
      run: |
        source venv/bin/activate
        pytest -v --tb=short

    - name: Cleanup Docker containers
      if: always()
      run: |
        sudo docker compose down -v --remove-orphans
        sudo docker system prune -af
